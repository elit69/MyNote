############################################# using with to insert select
WITH roleID AS ( SELECT ID FROM tbrole WHERE ROLE = 'ROLE_ADMIN')
insert into tbuser_role
SELECT ID,	6 FROM	roleID
####################################see connection postgres
select *
from pg_stat_activity
where datname = 'mydatabasename'
####################################reset template postgres
UPDATE pg_database SET datistemplate='false' WHERE datname='template1';
DROP DATABASE template1;
create database template1 TEMPLATE postgres;
UPDATE pg_database SET datistemplate='true' WHERE datname='template1';
#####################################start postgres console
psql -U postgres template1
#####################################like with array
select * from (select id, unnest(tags) from posts) as z where z.unnest like 'fa%'
#####################################select distinct with tsvector
SELECT * FROM ts_stat('SELECT searchtext_title FROM tbarticle')
ORDER BY nentry DESC, ndoc DESC, word
LIMIT 10;
#######################################view all trigger
SELECT * FROM information_schema.triggers;
######################################other
CREATE FUNCTION "public"."NewProc22"()
  RETURNS trigger AS $BODY$
BEGIN
    INSERT INTO "public"."tbhistory" ("memoid", "title", "content", "date") VALUES(NEW.id,NEW.title,NEW.content,now());
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE COST 100
;




CREATE TRIGGER "triggger_insert_tbhistory" after INSERT
OR UPDATE ON "tbmemo" FOR EACH ROW EXECUTE PROCEDURE "NewProc22" ();


